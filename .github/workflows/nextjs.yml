# Next.js サイトをビルドして GitHub ページにデプロイするワークフローの例
#
# Next.jsを始めるには https://nextjs.org/docs/getting-started をご覧ください。
#
name: Next.jsのサイトをPagesにデプロイする

on:
  # デフォルトブランチをターゲットとしたプッシュを実行する
  push:
    branches: ['master']

  # Actions タブからこのワークフローを手動で実行できるようにします。
  workflow_dispatch:

# GITHUB_TOKEN のパーミッションを設定し、GitHub Pages へのデプロイを許可します。
permissions:
  contents: read
  pages: write
  id-token: write

# 1つの同時デプロイメントを許可する
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリクローン
        uses: actions/checkout@v3

      - name: パッケージマネージャの検出
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Node.js セットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # - name: Pages セットアップ
      #   uses: actions/configure-pages@v2
      # with:
      # Next.jsの設定ファイルにbasePathを自動注入し、無効化する。
      # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized)を無効にする。
      #
      # 設定を自分で管理したい場合は、この行を削除しても OK
      # static_site_generator: next

      - name: キャッシュ 復元
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # パッケージやソースファイルが変更されるたびに新しいキャッシュを生成します。
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # ソースファイルは変更されたがパッケージは変更されなかった場合、以前のキャッシュからリビルドします。
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: 依存関係のインストール
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Next.jsでビルドする
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      # - name: Next.jsで静的HTMLを書き出す
      #   run: ${{ steps.detect-package-manager.outputs.runner }} next export

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
